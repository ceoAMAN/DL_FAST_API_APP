# YOLOv11 model configuration for punch detection
# Specialized for fast detection of small, fast-moving objects

# Parameters
nc: 1  # number of classes
depth_multiple: 1.0  # model depth multiplier
width_multiple: 1.0  # layer channel multiplier
anchors:
  - [10,13, 16,30, 33,23]  # small anchors, optimized for gloves
  - [30,61, 62,45, 59,119]  # medium anchors
  - [116,90, 156,198, 373,326]  # large anchors

# YOLOv11 backbone
backbone:
  # [from, number, module, args]
  [[-1, 1, Conv, [32, 3, 1]],  # 0-P1/2
   [-1, 1, Conv, [64, 3, 2]],  # 1-P2/4
   [-1, 1, BottleneckCSP, [64, 1]],
   [-1, 1, Conv, [128, 3, 2]],  # 3-P3/8
   [-1, 2, BottleneckCSP, [128, 1]],
   [-1, 1, Conv, [256, 3, 2]],  # 5-P4/16
   [-1, 8, BottleneckCSP, [256, 1]],
   [-1, 1, Conv, [512, 3, 2]],  # 7-P5/32
   [-1, 8, BottleneckCSP, [512, 1]],
   [-1, 1, SPPF, [512, 5]],  # 9 - Enhanced spatial pyramid pooling
  ]

# YOLOv11 enhanced neck with improved fusion
neck:
  [[-1, 1, Conv, [256, 1, 1]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 6], 1, Concat, [1]],  # concat backbone P4
   [-1, 3, BottleneckCSP, [256, 1, False]],  # 13
   
   [-1, 1, Conv, [128, 1, 1]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 4], 1, Concat, [1]],  # concat backbone P3
   [-1, 3, BottleneckCSP, [128, 1, False]],  # 17
   
   [-1, 1, Conv, [128, 3, 2]],
   [[-1, 14], 1, Concat, [1]],  # concat P4
   [-1, 3, BottleneckCSP, [256, 1, False]],  # 20
   
   [-1, 1, Conv, [256, 3, 2]],
   [[-1, 10], 1, Concat, [1]],  # concat P5
   [-1, 3, BottleneckCSP, [512, 1, False]],  # 23
  ]

# YOLOv11 head with attention mechanisms for better feature extraction
head:
  [[-1, 1, GhostConv, [256, 1, 1]],
   [-1, 1, Conv, [256, 3, 1]],
   [-1, 1, Conv, [256, 3, 1]],
   [-1, 1, nn.Conv2d, [na * (nc + 5), 1, 1]],  # 27 (P5/32-large)
   
   [17, 1, GhostConv, [128, 1, 1]],
   [-1, 1, Conv, [128, 3, 1]],
   [-1, 1, Conv, [128, 3, 1]],
   [-1, 1, nn.Conv2d, [na * (nc + 5), 1, 1]],  # 31 (P3/8-small)
   
   [20, 1, GhostConv, [256, 1, 1]],
   [-1, 1, Conv, [256, 3, 1]],
   [-1, 1, Conv, [256, 3, 1]],
   [-1, 1, nn.Conv2d, [na * (nc + 5), 1, 1]],  # 35 (P4/16-medium)
   
   [[27, 31, 35], 1, DetectionLayer, [nc, anchors, stride]],  # Detections (P3, P4, P5)
  ]

# Motion-aware modules for punch tracking
motion_modules:
  enable: True
  temporal_layers: 3
  # Enhanced temporal feature integration for better tracking of fast movements
  motion_features: 64
  motion_kernel_size: 3

# Latency-aware settings
inference_settings:
  fuse_conv_bn: True  # fuse convolution and batch normalization layers
  half_precision: True  # use FP16 for inference
  optimize_memory: True  # optimize memory usage
  dynamic_batching: True  # enable dynamic batching for faster inference
  input_format: "BGR"  # input format (BGR/RGB)

# Punch-specific optimizations
punch_detection:
  confidence_threshold: 0.25  # minimum confidence threshold
  iou_threshold: 0.45  # NMS IoU threshold
  max_detections: 100  # maximum number of detections
  dynamic_nms: True  # use dynamic NMS for better performance
  track_history: 5  # number of frames to track for temporal consistency